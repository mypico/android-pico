/*
 * (C) Copyright Cambridge Authentication Ltd, 2017
 *
 * This file is part of android-pico.
 *
 * android-pico is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * android-pico is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with android-pico. If not, see
 * <http://www.gnu.org/licenses/>.
 */


package org.mypico.android.data;

import java.util.HashMap;
import java.util.Map;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Credentials are stored to reflect the POST request that's needed t log in to a website. These
 * are a sequence of key, value pairs that can be turned into the POST string of an HTTP request,
 * This class transforms the credentials into a form that allows the data to be sent as part of
 * an intent, by implementing the {@link Parcelable} interface..
 * <p>
 * A {@code ParcelableCredentials} object is generated by the
 * {@link org.mypico.android.pairing.LensPairingIntentService} when it receives a
 * {@link org.mypico.android.pairing.LensPairingIntentService#GET_CREDENTIALS_FROM_TERMINAL} intent.
 *
 * @author David Llewellyn-Jones <dl551@cam.ac.uk>
 * @author Graeme Jenkinson <gcj21@cam.ac.uk>
 * @author Max Spences <ms955@cam.ac.uk>
 * @see Parcelable
 * @see org.mypico.android.pairing.LensPairingIntentService
 */
final public class ParcelableCredentials implements Parcelable {

    /**
     * Generates a TODO instance from a Parcelable class, hose data had previously been written by
     * Parcelable.writeToParcel().
     *
     * @see android.os.Parcelable.Creator
     */
    public static final Parcelable.Creator<ParcelableCredentials> CREATOR =
        new Parcelable.Creator<ParcelableCredentials>() {

            /**
             * Create a new instance of the Parcelable class. A ServiceInfo is instantiated
             * given a Parcel whose data had previously been written by
             * Parcelable.writeToParcel().
             *
             * @param Parcel a Parcel whose data had previously been written by
             *        Parcelable.writeToParcel()
             * @return a unmarshaled ServiceInfo instance
             */
            @Override
            public ParcelableCredentials createFromParcel(final Parcel source) {

                final Map<String, String> parcelledCredentials =
                    new HashMap<String, String>();
                final int size = source.readInt();
                for (int i = 0; i < size; i++) {

                    final String key = source.readString();
                    final String value = source.readString();
                    parcelledCredentials.put(key, value);
                }
                return new ParcelableCredentials(parcelledCredentials);
            }

            /**
             * Create a new array of the Parcelable class.
             *
             * @param size the size of the array to create.
             * @return the array
             */
            @Override
            public ParcelableCredentials[] newArray(final int size) {
                return new ParcelableCredentials[size];
            }
        };

    private final Map<String, String> credentials;

    public ParcelableCredentials(final Map<String, String> credentials) {
        if (credentials == null) {
            throw new NullPointerException("ParcelableCredential cannot be " +
                "created from a null credentials");
        }
        this.credentials = credentials;
    }

    @Override
    public String toString() {
        return credentials.toString();
    }

    /**
     * Return the dictionary of credentials stored in this {@code ParcelableCredentials} object.
     *
     * @return The credentiasl dictionary.
     */
    public Map<String, String> getCredentials() {
        return credentials;
    }

    /**
     * Describe the kinds of special objects contained in this Parcelable's marshalled
     * representation.
     *
     * @return a bitmask indicating the set of special object types marshalled by the Parcelable (0
     * in this case).
     */
    @Override
    public int describeContents() {
        return 0;
    }

    /**
     * Marshal this object into a Parcel.
     *
     * @param flags Additional flags about how the object should be written. May be 0 or
     *              PARCELABLE_WRITE_RETURN_VALUE.
     * @param out   The resulting parcel
     */
    @Override
    public void writeToParcel(final Parcel out, final int flags) {

        out.writeInt(credentials.size());
        for (String key : credentials.keySet()) {
            out.writeString(key);
            out.writeString(credentials.get(key));
        }
    }
}
